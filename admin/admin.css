import { app } from '/firebase-config.js';
import { getAuth } from 'https://www.gstatic.com/firebasejs/10.12.4/firebase-auth.js';
import { getFirestore, collection, doc, getDoc, addDoc, updateDoc, FieldValue } from 'https://www.gstatic.com/firebasejs/10.12.4/firebase-firestore.js';

const auth = getAuth(app);
const db = getFirestore(app);
const lessonsCollection = collection(db, 'lessons');
const noticesCollection = collection(db, 'notices');
const adsCollection = collection(db, 'ads');

async function requireAdmin(user){
  if(!user){ window.location.href='/auth/login.html'; return; }
  const docSnap = await getDoc(doc(db, 'users', user.uid));
  const role = docSnap.exists() ? docSnap.data().role : null;
  if(role !== 'admin'){
    // IMPORTANT: Do not use alert() in production code. Use a modal.
    // This is for demonstration purposes only.
    alert('Admin only');
    window.location.href='/auth/login.html';
  }
  return true;
}

auth.onAuthStateChanged(async (user)=>{
  const who = document.getElementById('who');
  if(!user){ who.textContent='Not logged in.'; return; }
  who.textContent = 'Logged in as ' + (user.email || user.uid);
  await requireAdmin(user);
});

// Save Lesson
document.getElementById('saveLesson').onclick = async ()=>{
  const data = {
    title: l_title.value.trim(),
    tldr: l_tldr.value.trim(),
    hook: l_hook.value.trim(),
    bullets: l_bullets.value.split('\n').map(s=>s.trim()).filter(Boolean).slice(0,5),
    action: l_action.value.trim(),
    next: l_next.value.trim(),
    status: l_status.value,
    updatedAt: FieldValue.serverTimestamp()
  };
  await addDoc(lessonsCollection, data);
  alert('Lesson saved');
};

// Save Notice
document.getElementById('saveNotice').onclick = async ()=>{
  const data = {
    text: n_text.value.trim() || 'Education only â€” not financial advice.',
    priority: parseInt(n_priority.value||'1'),
    active: n_active.value==='true',
    updatedAt: FieldValue.serverTimestamp()
  };
  // For notices and ads, we'll just add new documents for simplicity.
  // In a real CMS, you'd likely update an existing one.
  await addDoc(noticesCollection, data);
  alert('Notice saved');
};

// Save Ad
document.getElementById('saveAd').onclick = async ()=>{
  const data = {
    headline: a_head.value.trim() || 'Partner Offer',
    body: a_body.value.trim(),
    link: a_link.value.trim(),
    active: a_active.value==='true',
    updatedAt: FieldValue.serverTimestamp()
  };
  // For notices and ads, we'll just add new documents for simplicity.
  // In a real CMS, you'd likely update an existing one.
  await addDoc(adsCollection, data);
  alert('Ad saved');
};

// Logout
document.getElementById('logout').onclick = async ()=> {
  await auth.signOut();
  window.location.href = '/';
};
